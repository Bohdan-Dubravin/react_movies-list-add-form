{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","regex","NewMovie","onAdd","useState","validForm","setValidForm","errors","setErrors","newMovie","setNewMovie","handleChange","e","currentTarget","name","value","prev","useEffect","Object","values","every","error","val","onSubmit","preventDefault","htmlFor","type","id","onChange","onBlur","trim","match","disabled","App","state","moviesFromServer","addMovie","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb579ef3.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport './NewMovie.scss';\n\n// eslint-disable-next-line\nconst regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [validForm, setValidForm] = useState(false);\n  const [errors, setErrors] = useState({\n    title: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: 'Description',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  useEffect(() => {\n    setValidForm(Object.values(errors).every(error => error === '')\n    && Object.values(newMovie).every(val => val !== ''));\n  }, [newMovie, errors]);\n\n  function handleChange(\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) {\n    const { name, value } = e.currentTarget;\n\n    setNewMovie(prev => (\n      {\n        ...prev,\n        [name]: value,\n      }\n    ));\n  }\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    onAdd(newMovie);\n    setValidForm(true);\n  }\n\n  function validateTitle() {\n    if (!newMovie.title.trim()) {\n      setErrors({ ...errors, title: 'Enter Title!' });\n    } else {\n      setErrors({ ...errors, title: '' });\n    }\n  }\n\n  function validateImgUrl() {\n    if (!newMovie.imgUrl.trim()) {\n      setErrors({ ...errors, imgUrl: 'Enter imgUrl!' });\n    } else if (!newMovie.imgUrl.match(regex)) {\n      setErrors({ ...errors, imgUrl: 'Enter valid URL address!' });\n    } else {\n      setErrors({ ...errors, imgUrl: '' });\n    }\n  }\n\n  function validateimdbUrl() {\n    if (!newMovie.imdbUrl.trim()) {\n      setErrors({ ...errors, imdbUrl: 'Enter imdbUrl!' });\n    } else if (!newMovie.imdbUrl.match(regex)) {\n      setErrors({ ...errors, imdbUrl: 'Enter valid URL address!' });\n    } else {\n      setErrors({ ...errors, imdbUrl: '' });\n    }\n  }\n\n  function validateimdbId() {\n    if (!newMovie.imdbId.trim()) {\n      setErrors({ ...errors, imdbId: 'Enter imdbId!' });\n    } else {\n      setErrors({ ...errors, imdbId: '' });\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={`input-group ${errors.title && 'input-group--error'}`}>\n        <label\n          className={`input-group__label ${errors.title && 'input-group__label--error'}`}\n          htmlFor=\"title\"\n        >\n          Title\n        </label>\n        <input\n          className=\"input-group__input\"\n          type=\"text\"\n          name=\"title\"\n          id=\"title\"\n          value={newMovie.title}\n          onChange={handleChange}\n          onBlur={validateTitle}\n        />\n        <p className=\"input-group__errorText\">{errors.title}</p>\n      </div>\n      <div className=\"input-group\">\n        <label\n          className=\"input-group__label\"\n          htmlFor=\"description\"\n        >\n          Description\n        </label>\n        <textarea\n          className=\"input-group__input input-group__input--textarea\"\n          name=\"description\"\n          id=\"description\"\n          value={newMovie.description}\n          onChange={handleChange}\n        />\n      </div>\n      <div className={`input-group ${errors.imgUrl && 'input-group--error'}`}>\n        <label\n          className={`input-group__label ${errors.imgUrl && 'input-group__label--error'}`}\n          htmlFor=\"imgUrl\"\n        >\n          ImgUrl\n        </label>\n        <input\n          className=\"input-group__input\"\n          type=\"text\"\n          name=\"imgUrl\"\n          id=\"imgUrl\"\n          value={newMovie.imgUrl}\n          onChange={handleChange}\n          onBlur={validateImgUrl}\n        />\n        <p className=\"input-group__errorText\">{errors.imgUrl}</p>\n      </div>\n      <div className={`input-group ${errors.imdbUrl && 'input-group--error'}`}>\n        <label\n          className={`input-group__label ${errors.imdbUrl && 'input-group__label--error'}`}\n          htmlFor=\"imdbUrl\"\n        >\n          imdbUrl\n        </label>\n        <input\n          className=\"input-group__input\"\n          type=\"text\"\n          name=\"imdbUrl\"\n          id=\"imdbUrl\"\n          value={newMovie.imdbUrl}\n          onChange={handleChange}\n          onBlur={validateimdbUrl}\n        />\n        <p className=\"input-group__errorText\">{errors.imdbUrl}</p>\n      </div>\n      <div className={`input-group ${errors.imdbId && 'input-group--error'}`}>\n        <label\n          className={`input-group__label ${errors.imdbId && 'input-group__label--error'}`}\n          htmlFor=\"imdbId\"\n        >\n          imdbId\n        </label>\n        <input\n          className=\"input-group__input\"\n          type=\"text\"\n          name=\"imdbId\"\n          id=\"imdbId\"\n          value={newMovie.imdbId}\n          onChange={handleChange}\n          onBlur={validateimdbId}\n        />\n        <p className=\"input-group__errorText\">{errors.imdbId}</p>\n      </div>\n      <button\n        type=\"submit\"\n        className=\"submit-button\"\n        disabled={!validForm}\n      >\n        Add new Movie\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(prev => ({\n      movies: [...prev.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}